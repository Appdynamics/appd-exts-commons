enabled: true #Defaults to true.

metricPrefix: "Custom Metrics|Sample Monitor"

# A thread pool will be automatically created. If this property is omitted,
# the thread pool will not be created. (for synchronous execution)
numberOfThreads: 1

# This is to run this in scheduled mode. In this case, the extension will fetch the data every 300 seconds
# and caches the data. The cached data will be reported to controller every min. This way there is no metric drop.
# Can be used when the data rarely changes or to reduce the load while fetching metrics every minute.
taskSchedule:
  numberOfThreads: 1
  taskDelaySeconds: 300

encryptionKey: "" # Common for all the encrypted passwords in this file. If not set, will set value from "-Dappdynamics.agent.monitors.encryptionKey=encryptionKey".

servers:
  - uri: ""
    username: ""
    password: ""
    encryptedPassword: ""

    # Uri is preferred instead of host-port-useSsl combo.
  - host: "" # Avoid this, use uri instead
    port: "" # Avoid this, use uri instead
    useSSL: false # Avoid this, use uri instead.
    username: ""
    password: ""
    encryptedPassword: ""

connection:
  socketTimeout: 5000 # Read Timeout
  connectTimeout: 5000 # Connection Timeout

  sslCertCheckEnabled: true # Only used in Http4ClientBuilder. Not available in SSLUtils.
  sslCipherSuites: [] # Only used in Http4ClientBuilder. Not available in SSLUtils. Defaults to "default".
  enableCookies: false # Only used in Http4ClientBuilder. Not available in SSLUtils. Defaults to false.
  enablePreemptiveAuth: true # Only used in Http4ClientBuilder. Not available in SSLUtils.

  sslVerifyHostname: true
  sslProtocols: ["TLSV1.2"] # For SSLUtils, only the first one in the list is used. If null, by default TLSv1, TLSv1.1, TLSv1.2 are supported.

  sslTrustStorePath: "" # If not set, will set value from "-Dappdynamics.agent.monitors.truststore.path=/path/cacerts" if present, else will set value as <MachineAgentHome>/conf/extensions-cacerts.jks.
  sslTrustStorePassword: "" # If not set, will set value from "-Dappdynamics.agent.monitors.truststore.password=password".
  sslTrustStoreEncryptedPassword: "" ## If not set, will set value from "-Dappdynamics.agent.monitors.truststore.encryptedPassword=ghrr121fgk23-2636guu".

  sslKeyStorePath: "" # If not set, will set value from "-Dappdynamics.agent.monitors.keystore.path=/path/clientcerts" if present, else will set value as <MachineAgentHome>/conf/extensions-clientcerts.jks.
  sslKeyStorePassword: "" # If not set, will set value from "-Dappdynamics.agent.monitors.keystore.password=password".
  sslKeyStoreEncryptedPassword: "" # If not set, will set value from "-Dappdynamics.agent.monitors.keystore.encryptedPassword=ghrr121fgk23-2636guu".

proxy:
  uri: ""
  username: ""
  password: ""
  encryptedPassword: ""

metrics:
  - metric1:
      alias: "metric1"
      multiplier: 2
      delta: true
      aggregationType: "SUM"
      timeRollUpType: "SUM"
      clusterRollUpType: "INDIVIDUAL"
      convert:
        master: 0
        slave: 1

derivedMetrics:
  - derivedMetricPath: "{x}|{y}|newMetric1"
    formula: "{x}|{y}|metric1 + {x}|{y}|metric2"
  - derivedMetricPath: "{x}|{y}|newMetric2"
    formula: "{x}|{y}|metric3 / ({x}|{y}|metric1 + {x}|{y}|metric2)"

# If any of the following fields are not set, the values of the specific fields are set from the system properties of the corresponding fields as specified in the comments.
# If the system properties are not set for the field, then the data is retrieved from machine agent configFile. Please refer to ControllerInfoFactory for more details.
controllerInfo:
    username: "" # -Dappdynamics.agent.monitors.controller.username
    password: "" # -Dappdynamics.agent.monitors.controller.password
    encryptedPassword: "" # -Dappdynamics.agent.monitors.controller.encryptedPassword

metricPathReplacements:
  - replace: "&"
    replaceWith: ""
  - replace: "percent"
    replaceWith: "%"

# This field contains the various parameters required to initiate a connection and send data to the AppDynamics Events Service.
eventsServiceParameters:
  host: ""
  port: 9080
  globalAccountName: ""
  eventsApiKey: ""
  useSsl: false

enableHealthChecks: true # If not set, will be retrieved from "-Dappdynamics.agent.monitors.healthchecks.enable=true". Defaults to true.

# Generate a custom dashboard based on the provided template
customDashboard:
    enabled: true
    dashboardName: "Sample Monitor Dashboard"
    sslCertCheckEnabled: true
    # Update the path to the dashboard file.
    pathToSIMDashboard: "monitors/SampleMonitor/SIMDashboard.json"
    pathToNormalDashboard: "monitors/SampleMonitor/normalDashboard.json"
    periodicDashboardCheckInSeconds: 300