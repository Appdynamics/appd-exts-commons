We have a list of N nodes with each node pointing to one of the N nodes. It could even be pointing to itself. We call a node ‘good’, if it satisfies one of the following properties:

* It is the tail node (marked as node 1)
* It is pointing to the tail node (node 1)
* It is pointing to a good node

You can change the pointers of some nodes in order to make them all ‘good’. You are given the description of the nodes. You have to find out what is minimum number of nodes that you have to change in order to make all the nodes good.

Input:
The first line of input contains an integer number N which is the number of nodes. The next N lines contains N numbers, all between 1 and N. The first number, is the number of the node pointed to by Node 1; the second number is the number of the node pointed to by Node 2; the third number is the number of the node pointed to by Node 3 and so on.

N is no larger than 1000.

Output:
Print a single integer which is the answer to the problem

Sample Input 1:
5
1
2
3
4
5

Sample output 1:
4

Explanation:
We have to change pointers for four nodes (node #2 to node #5) to point to node #1. Thus 4 changes are required

Sample input 2:
5
5
5
5
5
5

Sample output 2:
1

Explanation:
We have to just change node #5 to point to node #1 (tail node) which will make node #5 good. Since all the other nodes point to a good node (node #5), every node becomes a good node.



################

You are given a function mergeArrays which takes in 2 sorted arrays as parameters. The first array has 'M' elements in it, the second one also has 'M' elements, but it's capacity is 2*M. The function mergeArrays takes both the arrays as parameters along with M. You are supposed to merge both the arrays into the second array such that the resulting array is sorted. The section of the program which parses the input and displays the output will be handled by us. 
Your task is to complete the body of the function or method provided, and to return the correct output.

 

Sample Input:
Consider the 1st array: {3,5,6,9,12,14,18,20,25,28}
2nd array: {30,32,34,36,38,40,42,44,46,48 }

Sample Output:
{3,5,6,9,12,14,18,20,25,28,30,32,34,36, 38,40,42,44,46,48}

Explanation:
As stated in the question, the second array contains enough space to accommodate the 1st array. Return the merged sorted array.


##################
You are given a 2-Dimensional array with M rows and N columns. You are initially positioned at (0,0) which is the top-left cell in the array. You are allowed to move either right or downwards. The array is filled with 1's and 0's. A 1 indicates that you can move through that cell, a 0 indicates that you cannot move through the cell. Given a function numberOfPaths which takes in the above 2-D array, return the number of paths from the top-left cell to the bottom-right cell (i.e. (0,0) to (M-1,N-1)).

Your task is to complete the body of the function and return a single integer denoting the number of paths mentioned above. If the answer is large (greater than or equal to 10 to the 9th power + 7), then return (answer % (10^9 + 7)).

Sample TestCases 

Input #00:
1 1 1 1
1 1 1 1
1 1 1 1

Output #00: 
10
 

Explanation:
None of the values in the array is zero, counting all possible ways from (0,0) to (2,3) gives us 10 possible paths from the top-left to bottom-right cell. 

Input #01: 
1 1
0 1

Output #01:
1

Explanation:
You can move only downwards (or) right, starting from the top-left cell (0,0) your only move is to (0,1) and then (1,1). Hence only 1 path. 

##################
You are provided a binary tree with integers. Search for the presence of a specified integer in this tree. If the element is found, return 1, otherwise return 0. 
The function stub is provided in multiple languages. Each binary three node has three primary members: An Integer (which it holds), a pointer to its left child,
and a pointer to its right child. Please note that we will provide the function or method prototype and an explanation of the data types or classes involved, 
with reasonable documentation. The section of the program which parses the input and displays the output will be handled by us. Your task is to 
complete the body of the function or method provided, and to return the correct output.
 

Sample Test Cases: 

Input #00: 


Element to Find: 30

Output #00:

1

Explanation:
The element 30 is present in the given tree so return 1.

 

Input #01: 


element: 79

Output #01:
0
 

Explanation:
The element 79 is not present in the given tree so return 0.

#####################
Write a program which prints the numbers from 1 to N, each on a new line. But for multiples of three print “Fizz” instead of the number 3 and for the multiples of five print “Buzz”.  For numbers which are multiples of both three and five print “FizzBuzz”. Read in the input number from STDIN.

Sample Input #00:

15

Sample Output #00 :

1
2
Fizz
4
Buzz
Fizz
7
8
Fizz
Buzz
11
Fizz
13
14
FizzBuzz

 

Explanation:

Position 3,6,9,12 have the word "Fizz" because they are multiples of 3.

Positions 5 and 10 have the word "Buzz" because they are multiples of 5.  

Position 15 has the word FizzBuzz because it is a multiple of both 3 and 5.  

 

Constraints :

N < 107
########################
K Difference

Given N numbers , [N<=10^5] we need to count the total pairs of numbers which have a difference of K. [K>0 and K<10^9]. The solution should have as low of a computational time complexity as possible. 


Input Format:

1st line contains N & K (integers).
2nd line contains N numbers of the set. All the N numbers are assured to be distinct.


Output Format:

One integer saying the no of pairs of numbers that have a diff K.

Sample Input #00:
5 2
1 5 3 4 2

Sample Output #00:
3

Explanation:
The possible pairs are (5,3), (4,2) and (3,1).
 
 
Sample Input #01:
10 1
363374326 364147530 61825163 1073065718 1281246024 1399469912 428047635 491595254 879792181 1069262793 
 
Sample Output #01:
0
 
Explanation:
There are no such pairs.
 
Read input from STDIN and write output to STDOUT. 